---
name: {{ cookiecutter.profile_slug }}-job-ansible-lint
{% raw %}
on:
  workflow_call:
    inputs:
      PYTHON_VERSION:
        description: "The version of Python that will be used."
        required: true
        type: string
      VERBOSITY:
        description: "Manages the types of Slack notifications."
        required: true
        type: boolean
    secrets:
      SLACK_WEBHOOK:
        description: "Optional, enables Slack notifications."
        required: false

jobs:

  run_ansible_lint:

    runs-on: ubuntu-latest

    steps:
      - name: Ansible Lint -- Checkout Repository
        uses: {% endraw %}{{ cookiecutter._GITHUB_ACTION_CHECKOUT }}{% raw %}

      - name: Ansible Lint -- Setup Environment
        run: |
          source "./.github/scripts/setup.sh"
        env:
          WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}

      - name: Ansible Lint -- Set up Python ${{ inputs.PYTHON_VERSION }}
        uses: {% endraw %}{{ cookiecutter._GITHUB_ACTION_PYTHON }}{% raw %}
        with:
          python-version: ${{ inputs.PYTHON_VERSION }}

      - name: Ansible Lint -- Install Poetry
        run: |
          source ".github/scripts/poetry.sh" "install-poetry"

      - name: Ansible Lint -- Initialize Cache Locations
        run: |
          mkdir -p ~/.cache/pypoetry/virtualenvs
          source ".github/scripts/task-setup-ansible-cache.sh" \
            "$(pwd)/ansible_cache"                  \
            ~/.ansible

      - name: Ansible Lint -- Mount Ansible Cache
        uses: {% endraw %}{{ cookiecutter._GITHUB_ACTION_CACHE }}{% raw %}
        with:
          key: ansible-${{ hashFiles('./profile/requirements.yml') }}-${{ env.CACHE_TTL }}
          path: ansible_cache

      - name: Ansible Lint -- Mount Poetry Cache
        uses: {% endraw %}{{ cookiecutter._GITHUB_ACTION_CACHE }}{% raw %}
        with:
          key: poetry-${{ hashFiles('pyproject.toml') }}-${{ runner.os }}-${{ env.CACHE_TTL }}
          path: ~/.cache/pypoetry/virtualenvs

      - name: Ansible Lint -- Install Requirements
        run: |
          source ".github/scripts/poetry.sh" "install-project"

      - name: Ansible Lint -- Install Ansible Galaxy Dependencies
        run: |
          cd profile
          poetry run ansible-galaxy install --timeout 120 -r requirements.yml

      - name: Ansible Lint -- Run Linter
        run: |
          cd profile
          poetry run ansible-lint

      - name: Ansible Lint -- Report Job Status (Success)
        if: inputs.VERBOSITY == true
        run: |
          "./.github/scripts/task-slack-notification.sh" "${NOTIFICATION}" ":white_check_mark: ansible lint checks were successful!"

      - name: Ansible Lint -- Report Job Status (Failure)
        if: failure()
        run: |
          "./.github/scripts/task-slack-notification.sh" "${NOTIFICATION}" ":x: ansible lint checks failed!"
{% endraw %}