---
name: {{ cookiecutter.profile_slug }}-job-create-release
{% raw %}
on:
  workflow_call:
    inputs:
      EXTRA_RELEASE_CONTENT:
        default: "[]"
        description: "A JSON array containing extra markdown content to append to the generated release."
        required: false
        type: string
      VERBOSITY:
        description: "Manages the types of Slack notifications."
        required: true
        type: boolean
    outputs:
      release:
        description: "A JSON object representing the created release."
        value: ${{ jobs.generate_github_release.outputs.release }}
    secrets:
      SLACK_WEBHOOK:
        description: "Optional, enables Slack notifications."
        required: false

jobs:

  generate_github_release:

    runs-on: ubuntu-latest
    outputs:
      release: ${{ steps.create_release.outputs.result }}

    steps:
      - name: Create Release -- Checkout Repository
        uses: {% endraw %}{{ cookiecutter._GITHUB_ACTION_CHECKOUT }}{% raw %}

      - name: Create Release -- Filter Release Candidates
        id: filter
        run: |
          source ".github/scripts/job-99-release-candidate.sh" "${{ github.event.ref }}"

      - name: Create Release -- Checkout Repository (All Commits)
        if: steps.filter.outputs.release_candidate == 'TRUE'
        uses: {% endraw %}{{ cookiecutter._GITHUB_ACTION_CHECKOUT }}{% raw %}
        with:
          fetch-depth: 0

      - name: Create Release -- Setup Environment
        if: steps.filter.outputs.release_candidate == 'TRUE'
        run: |
          source "./.github/scripts/setup.sh"
        env:
          WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}

      - name: Create Release -- Install poetry
        if: steps.filter.outputs.release_candidate == 'TRUE'
        run: |
          source "./.github/scripts/poetry.sh" "install-poetry"

      - name: Create Release -- Check 'pyproject.toml' Matches Tag
        if: steps.filter.outputs.release_candidate == 'TRUE'
        run: |
          source "./.github/scripts/job-99-version.sh"

      - name: Create Release -- Generate Changelog
        if: steps.filter.outputs.release_candidate == 'TRUE'
        run:
          source "./.github/scripts/job-99-create-changelog.sh"

      - name: Create Release -- Generate GitHub Release Draft
        if: steps.filter.outputs.release_candidate == 'TRUE'
        id: create_release
        uses: {% endraw %}{{ cookiecutter._GITHUB_ACTION_SCRIPT }}{% raw %}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const script = require('./.github/scripts/job-99-create-release.js')
            const extraContent = "\n" + JSON.parse(process.env.EXTRA_RELEASE_CONTENT).join("\n")
            const body = process.env.CHANGE_LOG_CONTENT + extraContent
            const tag = process.env.BRANCH_OR_TAG;
            return await script({ body, context, core, github, tag })
        env:
          EXTRA_RELEASE_CONTENT: ${{ inputs.EXTRA_RELEASE_CONTENT }}

      - name: Create Release -- Report Job Status (Success)
        if: steps.filter.outputs.release_candidate == 'TRUE'
        run: |
          "./.github/scripts/task-slack-notification.sh" "${NOTIFICATION}" ":white_check_mark: automated release has been created:\nhttps://github.com/${USER_NAME}/${PROJECT_NAME}/releases"

      - name: Create Release -- Report Job Status (Failure)
        if: failure()
        run: |
          "./.github/scripts/task-slack-notification.sh" "${NOTIFICATION}" ":x: automated release generation failed!"
{% endraw %}