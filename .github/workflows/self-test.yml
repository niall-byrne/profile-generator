---
name: profile-generator-self-test

# Required GitHub Repository Secrets:
# REMOTE_TOKEN      - GitHub token with access to the test repository.
# REMOTE_ORIGIN     - The git remote repository name (organization/repo).
# SLACK_WEBHOOK     - The slack webhook for build notifications.

on:
  push:
  schedule:
    - cron: "0 6 * * 1"
  workflow_dispatch:

jobs:

  _create_configuration:

    runs-on: ubuntu-latest
    outputs:
      configuration: ${{ steps.cookiecutter_configuration.outputs.value }}

    steps:
      - name: Create Configuration -- Checkout Repository
        uses: actions/checkout@v3

      - name: Create Configuration -- Set Cookiecutter Configuration as Output
        id: cookiecutter_configuration
        run: |
          source ./{{cookiecutter.profile_slug}}/.github/scripts/workflow-set-value.sh cat cookiecutter.json

  _start_notification:

    runs-on: ubuntu-latest

    steps:
      - name: Start -- Checkout Repository
        uses: actions/checkout@v3

      - name: Start -- Setup Environment
        run: |
          source ./.github/scripts/setup.sh
        env:
          WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}

      - name: Start -- Report Job Status on Success
        run: |
          ./{{cookiecutter.profile_slug}}/.github/scripts/notifications.sh "${NOTIFICATION}" ":white_check_mark: workflow has started!"

      - name: Start -- Report Job Status on Failure
        if: failure()
        run: |
          ./{{cookiecutter.profile_slug}}/.github/scripts/notifications.sh "${NOTIFICATION}" ":x: error reporting job status!"

  _success_notification:
    needs: [create_release]

    runs-on: ubuntu-latest

    steps:
      - name: Success -- Checkout Repository
        uses: actions/checkout@v3

      - name: Success -- Setup Environment
        run: |
          source ./.github/scripts/setup.sh
        env:
          WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}

      - name: Success -- Report Job Status on Success
        run: |
          ./{{cookiecutter.profile_slug}}/.github/scripts/notifications.sh "${NOTIFICATION}" ":white_check_mark: all checks were successful!"

      - name: Success -- Report Job Status on Failure
        if: failure()
        run: |
          ./{{cookiecutter.profile_slug}}/.github/scripts/notifications.sh "${NOTIFICATION}" ":x: error reporting job status!"

  ansible_lint_test:
    needs: [_create_configuration]

    runs-on: ubuntu-latest
    env:
      PROFILE_GENERATOR_SKIP_POETRY: 0
      PROFILE_GENERATOR_SKIP_PRECOMMIT: 0
      SELECTION_TOML: 1

    steps:

      - name: Ansible Lint -- Checkout Repository
        uses: actions/checkout@v3
        with:
          path: 'template'

      - name: Ansible Lint -- Setup Environment
        run: |
          source ./template/.github/scripts/setup.sh
        env:
          WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}

      - name: Ansible Lint -- Set up Python ${{ fromJson(needs._create_configuration.outputs.configuration)._MAC_MAKER_PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ fromJson(needs._create_configuration.outputs.configuration)._MAC_MAKER_PYTHON_VERSION }}

      - name: Ansible Lint -- Install Template Requirements
        run: |
          source ./template/.github/scripts/requirements.sh

      - name: Ansible Lint -- Initialize Cache Locations
        run: |
          mkdir -p ~/.cache/pypoetry/virtualenvs
          source ./template/{{cookiecutter.profile_slug}}/.github/scripts/ansible_cache.sh  \
            "$(pwd)/ansible_cache"                                                          \
            ~/.ansible

      - name: Ansible Lint -- Mount Ansible Cache
        uses: actions/cache@v3
        with:
          key: ansible-${{ hashFiles('./template/{{cookiecutter.profile_slug}}/profile/requirements.yml') }}-${{ env.CACHE_TTL }}
          path: ansible_cache

      - name: Ansible Lint -- Mount Poetry Cache
        uses: actions/cache@v3
        with:
          key: poetry-${{ hashFiles('./template/{{cookiecutter.profile_slug}}/pyproject.toml') }}-${{ runner.os }}-${{ env.CACHE_TTL }}
          path: ~/.cache/pypoetry/virtualenvs

      - name: Ansible Lint -- Render Template
        run: |
          source ./template/.github/scripts/template.sh

      - name: Ansible Lint -- Lint Rendered Template
        run: |
          cd "${TEMPLATED_NAME}/profile"
          poetry run ansible-lint

      - name: Ansible Lint -- Report Job Status on Success
        if: fromJSON(needs._create_configuration.outputs.configuration)._GITHUB_CI_DEFAULT_VERBOSE_NOTIFICATIONS == true
        run: |
          ./template/{{cookiecutter.profile_slug}}/.github/scripts/notifications.sh "${NOTIFICATION}" ":white_check_mark: ansible linting checks succeeded!"

      - name: Ansible Lint -- Report Job Status on Failure
        if: failure()
        run: |
          ./template/{{cookiecutter.profile_slug}}/.github/scripts/notifications.sh "${NOTIFICATION}" ":x: ansible linting checks failed!"

  security_test_repo:
    needs: [_create_configuration]
    uses: ./.github/workflows/.job-10-security.yml
    with:
      CONFIGURATION: ${{ needs._create_configuration.outputs.configuration }}
    secrets: inherit

  documentation_test:
    needs: [_create_configuration]
    uses: ./.github/workflows/.job-30-documentation.yml
    with:
      CONFIGURATION: ${{ needs._create_configuration.outputs.configuration }}
    secrets: inherit

  precommit_test:
    needs: [_create_configuration]
    uses: ./.github/workflows/.job-50-precommit.yml
    with:
      CONFIGURATION: ${{ needs._create_configuration.outputs.configuration }}
    secrets: inherit

  push_repository_test:
    needs: [_create_configuration, _start_notification, ansible_lint_test, commit_lint_test, documentation_test, precommit_test, security_test_repo, shellcheck_test, toml_lint_test, yaml_lint_test]
    uses: ./.github/workflows/.job-60-remote-push.yml
    with:
      CONFIGURATION: ${{ needs._create_configuration.outputs.configuration }}
    secrets: inherit

  commit_lint_test:
    needs: [_create_configuration]
    uses: ./.github/workflows/.job-80-commit-lint.yml
    with:
      CONFIGURATION: ${{ needs._create_configuration.outputs.configuration }}
    secrets: inherit

  shellcheck_test:
    needs: [_create_configuration]
    uses: ./.github/workflows/.job-80-shell-lint.yml
    with:
      CONFIGURATION: ${{ needs._create_configuration.outputs.configuration }}
    secrets: inherit

  toml_lint_test:
    needs: [_create_configuration]
    uses: ./.github/workflows/.job-80-toml-lint.yml
    with:
      CONFIGURATION: ${{ needs._create_configuration.outputs.configuration }}
    secrets: inherit

  yaml_lint_test:
    needs: [_create_configuration]
    uses: ./.github/workflows/.job-80-yaml-lint.yml
    with:
      CONFIGURATION: ${{ needs._create_configuration.outputs.configuration }}
    secrets: inherit

  mac_maker_test:
    needs: [_create_configuration, push_repository_test]
    uses: ./.github/workflows/.job-95-mac-maker.yml
    with:
      CONFIGURATION: ${{ needs._create_configuration.outputs.configuration }}
    secrets: inherit

  create_release:
    needs: [_create_configuration, mac_maker_test]
    uses: ./.github/workflows/.job-99-create-release.yml
    with:
      CONFIGURATION: ${{ needs._create_configuration.outputs.configuration }}
    secrets: inherit
